public class TargetRangeFinder {

    public int[] searchRange(int[] nums, int target) {
        int[] result = new int[2];
        result[0] = findFirst(nums, target);
        result[1] = findLast(nums, target);
        return result;
    }

    private int findFirst(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        int first = -1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] == target) {
                first = mid;
                right = mid - 1;  // keep searching to the left
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else { // nums[mid] > target
                right = mid - 1;
            }
        }

        return first;
    }

    private int findLast(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        int last = -1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] == target) {
                last = mid;
                left = mid + 1;  // keep searching to the right
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else { // nums[mid] > target
                right = mid - 1;
            }
        }

        return last;
    }

    public static void main(String[] args) {
        TargetRangeFinder trf = new TargetRangeFinder();
        int[] nums = {5, 7, 7, 8, 8, 10};
        int target = 8;
        int[] result = trf.searchRange(nums, target);

        System.out.println("[" + result[0] + ", " + result[1] + "]");
        // Output: [3, 4]
    }
}
